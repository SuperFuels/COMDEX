"""
Interfaces / Protocols for GlyphWave.
"""
from typing import Protocol, Dict, Any, Optional, Iterable

class IGlyphWaveCarrier(Protocol):
    def emit(self, gwip: Dict[str, Any]) -> None: ...
    def capture(self) -> Optional[Dict[str, Any]]: ...
    def stats(self) -> Dict[str, Any]: ...
    def close(self) -> None: ...

class IPhaseScheduler(Protocol):
    def schedule(self, gwip: Dict[str, Any]) -> Dict[str, Any]: ...
    def set_policy(self, policy: Dict[str, Any]) -> None: ...
    def metrics(self) -> Dict[str, Any]: ...

class IGWIPCodec(Protocol):
    def encode(self, gip: Dict[str, Any]) -> Dict[str, Any]: ...
    def decode(self, gwip: Dict[str, Any]) -> Dict[str, Any]: ...
    def upgrade(self, packet: Dict[str, Any]) -> Dict[str, Any]: ...
    def downgrade(self, packet: Dict[str, Any]) -> Dict[str, Any]: ...