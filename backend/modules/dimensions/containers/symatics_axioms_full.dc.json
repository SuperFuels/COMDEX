{
  "id": "symatics_axioms_full",
  "type": "dc",
  "glyphs": [
    "âŸ¦ Axiom âŸ§ | comm_phi : (A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A) â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | self_pi_bot : (A â‹ˆ[Ï€] A) â†” âŠ¥ â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | self_zero_id : (A â‹ˆ[0] A) â†” A â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | non_idem : âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | neutral_phi : (A â‹ˆ[Ï†] âŠ¥) â†” A â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | no_distrib : Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))) â†’ Prove âŸ§",
    "âŸ¦ Theorem âŸ§ | no_distrib_formal : ((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)) â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | assoc_phase : (A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C) â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | inv_phase : A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | fuse_phase_zero : (A â‹ˆ[0] B) â†” (A âŠ• B) â†’ Prove âŸ§",
    "âŸ¦ Axiom âŸ§ | fuse_phase_pi : (A â‹ˆ[Ï€] B) â†” (A âŠ– B) â†’ Prove âŸ§"
  ],
  "symbolic_logic": [
    {
      "name": "comm_phi",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)",
      "logic_raw": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "comm_phi",
        "logic": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "comm_phi",
        "logic": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "self_pi_bot",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "(A â‹ˆ[Ï€] A) â†” âŠ¥",
      "logic_raw": "(A â‹ˆ[Ï€] A) â†” âŠ¥",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "self_pi_bot",
        "logic": "(A â‹ˆ[Ï€] A) â†” âŠ¥",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï€] A) â†” âŠ¥"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "(A â‹ˆ[Ï€] A) â†” âŠ¥"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "self_pi_bot",
        "logic": "(A â‹ˆ[Ï€] A) â†” âŠ¥",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï€] A) â†” âŠ¥"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "(A â‹ˆ[Ï€] A) â†” âŠ¥",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "self_zero_id",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "(A â‹ˆ[0] A) â†” A",
      "logic_raw": "(A â‹ˆ[0] A) â†” A",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "self_zero_id",
        "logic": "(A â‹ˆ[0] A) â†” A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[0] A) â†” A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "(A â‹ˆ[0] A) â†” A"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "self_zero_id",
        "logic": "(A â‹ˆ[0] A) â†” A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[0] A) â†” A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "(A â‹ˆ[0] A) â†” A",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "non_idem",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A",
      "logic_raw": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "non_idem",
        "logic": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "non_idem",
        "logic": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "neutral_phi",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "(A â‹ˆ[Ï†] âŠ¥) â†” A",
      "logic_raw": "(A â‹ˆ[Ï†] âŠ¥) â†” A",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "neutral_phi",
        "logic": "(A â‹ˆ[Ï†] âŠ¥) â†” A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] âŠ¥) â†” A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "(A â‹ˆ[Ï†] âŠ¥) â†” A"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "neutral_phi",
        "logic": "(A â‹ˆ[Ï†] âŠ¥) â†” A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] âŠ¥) â†” A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "(A â‹ˆ[Ï†] âŠ¥) â†” A",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "no_distrib",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))",
      "logic_raw": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "no_distrib",
        "logic": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "no_distrib",
        "logic": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "no_distrib_formal",
      "symbol": "âŸ¦ Theorem âŸ§",
      "logic": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))",
      "logic_raw": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))",
      "codexlang": {
        "symbol": "âŸ¦ Theorem âŸ§",
        "name": "no_distrib_formal",
        "logic": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "no_distrib_formal",
        "logic": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Theorem âŸ§"
      ]
    },
    {
      "name": "assoc_phase",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)",
      "logic_raw": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "assoc_phase",
        "logic": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "assoc_phase",
        "logic": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "inv_phase",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B",
      "logic_raw": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "inv_phase",
        "logic": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "inv_phase",
        "logic": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "fuse_phase_zero",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "(A â‹ˆ[0] B) â†” (A âŠ• B)",
      "logic_raw": "(A â‹ˆ[0] B) â†” (A âŠ• B)",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "fuse_phase_zero",
        "logic": "(A â‹ˆ[0] B) â†” (A âŠ• B)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[0] B) â†” (A âŠ• B)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "(A â‹ˆ[0] B) â†” (A âŠ• B)"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "fuse_phase_zero",
        "logic": "(A â‹ˆ[0] B) â†” (A âŠ• B)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[0] B) â†” (A âŠ• B)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "(A â‹ˆ[0] B) â†” (A âŠ• B)",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    },
    {
      "name": "fuse_phase_pi",
      "symbol": "âŸ¦ Axiom âŸ§",
      "logic": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)",
      "logic_raw": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)",
      "codexlang": {
        "symbol": "âŸ¦ Axiom âŸ§",
        "name": "fuse_phase_pi",
        "logic": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ],
        "normalized": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)"
      },
      "glyph_tree": {
        "type": "LogicGlyph",
        "name": "fuse_phase_pi",
        "logic": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      },
      "source": "tmp/lean_uploads/symatics_axioms_full.lean",
      "body": "",
      "leanProof": "",
      "symbolicProof": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)",
      "proofExplanation": null,
      "replay_tags": [
        "ðŸ“œ Lean Theorem",
        "ðŸ§  âŸ¦ Axiom âŸ§"
      ]
    }
  ],
  "thought_tree": [
    {
      "name": "comm_phi",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "comm_phi",
        "logic": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "self_pi_bot",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "self_pi_bot",
        "logic": "(A â‹ˆ[Ï€] A) â†” âŠ¥",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï€] A) â†” âŠ¥"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "self_zero_id",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "self_zero_id",
        "logic": "(A â‹ˆ[0] A) â†” A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[0] A) â†” A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "non_idem",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "non_idem",
        "logic": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "neutral_phi",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "neutral_phi",
        "logic": "(A â‹ˆ[Ï†] âŠ¥) â†” A",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] âŠ¥) â†” A"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "no_distrib",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "no_distrib",
        "logic": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "no_distrib_formal",
      "glyph": "âŸ¦ Theorem âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "no_distrib_formal",
        "logic": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "assoc_phase",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "assoc_phase",
        "logic": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "inv_phase",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "inv_phase",
        "logic": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "fuse_phase_zero",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "fuse_phase_zero",
        "logic": "(A â‹ˆ[0] B) â†” (A âŠ• B)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[0] B) â†” (A âŠ• B)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    },
    {
      "name": "fuse_phase_pi",
      "glyph": "âŸ¦ Axiom âŸ§",
      "node": {
        "type": "LogicGlyph",
        "name": "fuse_phase_pi",
        "logic": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)",
        "operator": "âŠ•",
        "args": [
          {
            "type": "CodexLang",
            "value": "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)"
          },
          {
            "type": "Proof",
            "value": ""
          }
        ]
      }
    }
  ],
  "validation_errors": [],
  "validation_errors_version": "v1",
  "codex_ast": [
    "(A â‹ˆ[Ï†] B) â†” (B â‹ˆ[-Ï†] A)",
    "(A â‹ˆ[Ï€] A) â†” âŠ¥",
    "(A â‹ˆ[0] A) â†” A",
    "âˆ€ Ï†, Ï† â‰  0 âˆ§ Ï† â‰  Ï€ â†’ (A â‹ˆ[Ï†] A) â‰  A",
    "(A â‹ˆ[Ï†] âŠ¥) â†” A",
    "Â¬(((A â‹ˆ[Ï†] B) âˆ§ C) â†” ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C)))",
    "((A â‹ˆ[Ï†] B) âˆ§ C) â‰  ((A âˆ§ C) â‹ˆ[Ï†] (B âˆ§ C))",
    "(A â‹ˆ[Ï†] B) â‹ˆ[Ïˆ] C â†” A â‹ˆ[Ï†+Ïˆ] (B â‹ˆ[Ïˆ] C)",
    "A â‹ˆ[Ï†] (A â‹ˆ[-Ï†] B) â†” B",
    "(A â‹ˆ[0] B) â†” (A âŠ• B)",
    "(A â‹ˆ[Ï€] B) â†” (A âŠ– B)"
  ],
  "sqi_scores": [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "mutations": []
}