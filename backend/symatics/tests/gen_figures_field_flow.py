# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Tessaris Symatics v0.7 â€” Visualization Generator
# Figure: Î»â€“Ïˆ Symbolic Fluid Topology (Field Flow)
# Output: docs/figures/field_flow_topology.png
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

import os
import numpy as np
import matplotlib.pyplot as plt
from backend.symatics.core.field_coupling_engine import FieldCouplingEngine
from backend.symatics.core.flow_operators import coherence_flux, divergence, laplacian

# Ensure figure directory exists
os.makedirs("docs/figures", exist_ok=True)

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Initialize symbolic fields
engine = FieldCouplingEngine(viscosity=0.02, damping=0.01, eta=0.05)
x = np.linspace(0, np.pi, 128)
Ïˆ0 = np.sin(x)
Î»0 = np.ones_like(Ïˆ0)

engine.register_field("Ïˆ", Ïˆ0)
engine.register_field("Î»", Î»0)

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Simulation loop
frames = 80
Ïˆ_hist, Î»_hist = [], []

for t in range(frames):
    Ïˆ, Î» = engine.step("Ïˆ", "Î»", dt=0.1)
    Ïˆ_hist.append(Ïˆ.copy())
    Î»_hist.append(Î».copy())

Ïˆ_final = Ïˆ_hist[-1]
Î»_final = Î»_hist[-1]
Î¦ = coherence_flux(Ïˆ_final)
divÏˆ = divergence(Ïˆ_final)
lapÏˆ = laplacian(Ïˆ_final)

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Visualization
plt.figure(figsize=(10, 5))
plt.suptitle("Tessaris Symatics â€” Î»â€“Ïˆ Symbolic Field Flow (v0.7)", fontsize=14)

# Coherence coloration field
plt.subplot(1, 1, 1)
plt.title("Symbolic Fluid Topology: Î»â†”Ïˆ Coupling with Coherence Flux", fontsize=12)
plt.xlabel("Position (x)")
plt.ylabel("Amplitude")

# Color map for coherence flux (Î¦)
colors = plt.cm.viridis((Î¦ - Î¦.min()) / (Î¦.max() - Î¦.min()))

plt.plot(x, Ïˆ_final, color="white", linewidth=1.5, label="Ïˆ (wave)")
plt.fill_between(x, Ïˆ_final, color="gray", alpha=0.2)
plt.scatter(x, Î»_final, c=colors, s=15, label="Î» (law field)", zorder=5)

plt.text(
    np.pi * 0.5,
    0.9,
    "Î»(t) follows âˆ‡Â·Ïˆ feedback\ncoherence flux Î¦ stabilizes oscillation",
    ha="center",
    fontsize=9,
    color="dimgray",
)

plt.legend(loc="upper right", fontsize=9)
plt.grid(alpha=0.2)
plt.tight_layout()

# Save figure
out_path = "docs/figures/field_flow_topology.png"
plt.savefig(out_path, dpi=300, bbox_inches="tight", facecolor="white")

print(f"âœ… Saved {out_path}")
print("ðŸŽ¨ Î»â€“Ïˆ symbolic fluid flow visualization complete â€” ready for Volume VIII.")