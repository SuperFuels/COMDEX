# .github/workflows/deploy-cloud-run.yml
name: Build & Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Check out the code
      - name: Checkout
        uses: actions/checkout@v3

      # 2️⃣ Authenticate to GCP
      - name: GCP Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3️⃣ Install & configure gcloud
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          install_components: beta

      # 4️⃣ Let Docker push to Artifact Registry
      - name: Configure Docker
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      # 5️⃣ Compute a short SHA for tagging
      - name: Set IMAGE_TAG env var
        run: |
          echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      # 6️⃣ Build your image for linux/amd64
      - name: Build Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/comdex-api/comdex-api:${{ env.IMAGE_TAG }} \
            -f backend/Dockerfile \
            backend

      # 7️⃣ Push to Artifact Registry
      - name: Push to Artifact Registry
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/comdex-api/comdex-api:${{ env.IMAGE_TAG }}

      # 8️⃣ Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy comdex-api \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/comdex-api/comdex-api:${{ env.IMAGE_TAG }} \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --add-cloudsql-instances=${{ secrets.CLOUDSQL_CONNECTION_NAME }} \
            --vpc-connector=comdex-connector \
            --vpc-egress private-ranges-only \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }},WEB3_PROVIDER_URL=${{ secrets.WEB3_PROVIDER_URL }},ESCROW_CONTRACT_ADDRESS=${{ secrets.ESCROW_CONTRACT_ADDRESS }},DEPLOYER_PRIVATE_KEY=${{ secrets.DEPLOYER_PRIVATE_KEY }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}

